#!/usr/bin/env bash

set -eu
set -o pipefail

if [[ "${NGROK_AUTOLOAD_CONFIG_DEBUG:-false}" == "true" ]]; then
  set -x
fi

err() {
  echo "$*" >&2
}

die() {
  local line=

  for line in "$@"; do
    err "$line"
  done

  exit 1
}

get_config_opts() {
  local config_dir='' config_path=''

  for config_dir in "$@"; do
    config_path="${config_dir}/ngrok.yml"

    if [[ -f "$config_path" ]]; then
      echo "--config $config_path"
    fi
  done
}

should_load_configs() {
  local -r subcommand="$1"

  case "$subcommand" in
    authtoken|credits|update|version|help|-h)
      return 1
      ;;
    *)
      return 0
      ;;
  esac
}

exec_ngrok_with_configurations() {
  local -r subcommand="$1"
  shift 1
  local options=()
  IFS=" " read -r -a options <<< "$(subcommand::configs-oneline)"
  command ngrok "$subcommand" "${options[@]}" "$@"
}

is_original_subcommand() {
  declare -F "subcommand::$1" >/dev/null 2>&1
}

subcommand::configs() {
  local options=()
  IFS=" " read -r -a options <<< "$(echo "$CONFIG_DIRS")"
  get_config_opts "${options[@]}"
}

subcommand::configs-oneline() {
  subcommand::configs | xargs
}

subcommand::update-autoload() {
  if ! type git >/dev/null 2>&1; then
    die "update-autoload cannot be run unless git exists"
  fi

  cd "$(dirname "${BASH_SOURCE[0]}")"

  if [[ ! -d ".git" ]]; then
    die "update-autoload can be run only when installed through git clone"
  fi

  git fetch origin release
  git merge --ff origin/release
  echo "Completed update-autoload successfully."
}

if ! type "ngrok" >/dev/null 2>&1; then
  die "ngrok is not found" "please follow https://dashboard.ngrok.com/get-started to install"
fi

: "${CONFIG_DIRS:=$PWD}"

if [[ "${USE_GLOBAL_CONFIG:=true}" != "false" ]]; then
  CONFIG_DIRS="$HOME/.ngrok2 $CONFIG_DIRS"
fi

SUBCOMMAND="${1:-help}"

if (($# > 0)); then
  shift 1
fi

if is_original_subcommand "$SUBCOMMAND"; then
  "subcommand::$SUBCOMMAND" "$@"
elif [[ "${IGNORE_CONFIG:=false}" != "true" ]] && should_load_configs "$SUBCOMMAND"; then
  exec_ngrok_with_configurations "$SUBCOMMAND" "$@"
else
  command ngrok "$SUBCOMMAND" "$@"
fi
